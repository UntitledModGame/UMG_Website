"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4462],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>k});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},u="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(n),d=r,k=u["".concat(l,".").concat(d)]||u[d]||h[d]||i;return n?a.createElement(k,o(o({ref:t},c),{},{components:n})):a.createElement(k,o({ref:t},c))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:r,o[1]=s;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9045:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const i={slug:"heisenbug",title:"Heisenbug in UMG!",tags:["umg","coding"]},o="Heisenbug in UMG!!!",s={permalink:"/blog/heisenbug",source:"@site/blog/2024-02-7_heisenbug.md",title:"Heisenbug in UMG!",description:"Note: This lil rant was written a long time ago; nearly 2 years ago.",date:"2024-02-07T00:00:00.000Z",formattedDate:"February 7, 2024",tags:[{label:"umg",permalink:"/blog/tags/umg"},{label:"coding",permalink:"/blog/tags/coding"}],readingTime:3.23,hasTruncateMarker:!0,authors:[],frontMatter:{slug:"heisenbug",title:"Heisenbug in UMG!",tags:["umg","coding"]},nextItem:{title:"Problem discovery",permalink:"/blog/problem_discovery"}},l={authorsImageUrls:[]},p=[{value:"Oh <em>no.</em>",id:"oh-no",level:2}],c={toc:p},u="wrapper";function h(e){let{components:t,...i}=e;return(0,r.kt)(u,(0,a.Z)({},c,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Note: This lil rant was written a long time ago; nearly 2 years ago."),"\n",(0,r.kt)("strong",{parentName:"p"},"I'm deploying on this blog because its funni."),(0,r.kt)("br",null)),(0,r.kt)("hr",null),(0,r.kt)("p",null,"So I was happily programming away one day, refactoring my networking\ncode, when suddenly, my entity spawning code stopped working."),(0,r.kt)("p",null,"Oh no! I probably screwed something up."),(0,r.kt)("p",null,"Well, since I can't see anything obvious, and I haven't touched this code\nin a while, lets start from the roots.\nI checked the client-side, and to no surprise, the entity spawn events\nwere not being received.\nOkay- lets have a look at where the event is supposed to be emitted."),(0,r.kt)("p",null,"This is the code on the server that is responsible for sending entities across:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},'-- on creation of a new entity:\nlocal pckrdata = cy.serialize_entity(ent)\nseen[ent] = true\nconnection.broadcast("ent_spawn", pckrdata)\n')),(0,r.kt)("p",null,"Okay, well, is this code even being ran?\nLets check by putting a print in there:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},'-- on creation of a new entity:\nlocal pckrdata = cy.serialize_entity(ent)\nprint("SENDING ENT SPAWN")\nseen[ent] = true\nconnection.broadcast("ent_spawn", pckrdata)\n')),(0,r.kt)("p",null,"I run the code, and see a bunch of ",(0,r.kt)("inlineCode",{parentName:"p"},"SENDING ENT SPAWN")," messages in the console.\nOkay, cool.... "),(0,r.kt)("p",null,"BUT WAIT: Now the entities are spawning just fine. The game is literally working.\nWhat??? What did I change?\nI go back and delete the print, and the entities stop spawning, and no messages\nappear in the console."),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"(This code doesn't spawn any entities.)")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},'-- on creation of a new entity:\nlocal pckrdata = cy.serialize_entity(ent)\n-- print("SENDING ENT SPAWN")\nseen[ent] = true\nconnection.broadcast("ent_spawn", pckrdata)\n')),(0,r.kt)("p",null,"What is this black magic?!?!?",(0,r.kt)("br",null),"\nWhen the print is there, the entities spawn.",(0,r.kt)("br",null),"\nWhen the print is not there, the entities ",(0,r.kt)("em",{parentName:"p"},"STOP SPAWNING"),"."),(0,r.kt)("br",null),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"heisenbug",src:n(6138).Z,width:"603",height:"460"})),(0,r.kt)("h2",{id:"oh-no"},"Oh ",(0,r.kt)("em",{parentName:"h2"},"no.")),(0,r.kt)("p",null,"It looks like we are dealing with a notorious ",(0,r.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Heisenbug"},"heisenbug!")),(0,r.kt)("p",null,"Thankfully, it wasn't too hard to discover.",(0,r.kt)("br",null),"\nHad the bug been non-deterministic, I would have been screwed. "),(0,r.kt)("p",null,'In the end, the solution was "somewhat" simple... but it requires a bit of background knowledge.'),(0,r.kt)("p",null,"For context, I'm using ",(0,r.kt)("a",{parentName:"p",href:"wiki.luajit.org"},"luaJIT")," alongside ",(0,r.kt)("a",{parentName:"p",href:"https://leafo.net/lua-enet/"},"ENet")," for my networking.\nWhen I call ",(0,r.kt)("inlineCode",{parentName:"p"},"print"),", luaJIT hits a ",(0,r.kt)("a",{parentName:"p",href:"https://web.archive.org/web/20220717120825/http://wiki.luajit.org/NYI"},"NYI function"),", which causes it to hit a slow path and fall back to interpreted mode ",(0,r.kt)("em",{parentName:"p"},"for the entire surrounding trace."),"\n(Note that for luaJIT 2.1 and beyond, a ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/LuaJIT/LuaJIT/issues/13"},"trace stitching")," feature is introduced, which prevents this, but lets not get beyond ourselves- in the version I was using, ",(0,r.kt)("inlineCode",{parentName:"p"},"print")," breaks JIT for the whole trace.)",(0,r.kt)("br",null),"\nIf we pair that with the fact that ",(0,r.kt)("inlineCode",{parentName:"p"},"print")," is pretty slow anyway, then we can be confident that ",(0,r.kt)("inlineCode",{parentName:"p"},"print")," is slowing down our code a lot."),(0,r.kt)("p",null,"I then took a look at the packet frequency per tick on the clientside, and for testing, varied the frequency of packets manually.",(0,r.kt)("br",null),"\nResults were so: any more than a few thousands unique packets per frame caused the ENet client to drop the packets."),(0,r.kt)("p",null,"Aha! This must be our solution, right? "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"print breaks JIT"),(0,r.kt)("li",{parentName:"ul"},"surrounding code cannot be JIT-ed..."),(0,r.kt)("li",{parentName:"ul"},"Packets are more spaced out, since the server takes longer to complete a tick"),(0,r.kt)("li",{parentName:"ul"},"Therefore client receives less packets, which the ENet client can handle!")),(0,r.kt)("p",null,"To double check this, I replaced ",(0,r.kt)("inlineCode",{parentName:"p"},"print")," with ",(0,r.kt)("inlineCode",{parentName:"p"},"io.write"),", which happens to keep\nthe JIT active: I see a bunch of ",(0,r.kt)("inlineCode",{parentName:"p"},"SENDING ENT SPAWN")," in the console, but no\nentities spawn."),(0,r.kt)("p",null,"Great- we have our issue. What a funny bug!"),(0,r.kt)("p",null,"To solve this in the end, I wrote code that concatenates packets to reduce the\npacket frequency.\nthis seems to work well, and I can send thousands more events across\nper frame which is nice."),(0,r.kt)("p",null,"I also set up some better tick infrastructure so packets aren't being spammed across."),(0,r.kt)("p",null,"It is a bit sad that the packets are dropped silently though. I'll have to bare this in mind for the future- I could see this becoming an issue for a second time if the server is put under a lot of stress."))}h.isMDXComponent=!0},6138:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/HEISENBUG_2-6401bab068229c97b6e36b3945bfa17f.png"}}]);