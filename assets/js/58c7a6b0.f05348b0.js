"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1111],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>g});var i=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=i.createContext({}),s=function(e){var t=i.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},m=function(e){var t=s(e.components);return i.createElement(p.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},u=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,p=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),c=s(n),u=a,g=c["".concat(p,".").concat(u)]||c[u]||d[u]||r;return n?i.createElement(g,o(o({ref:t},m),{},{components:n})):i.createElement(g,o({ref:t},m))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,o=new Array(r);o[0]=u;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[c]="string"==typeof e?e:a,o[1]=l;for(var s=2;s<r;s++)o[s]=n[s];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}u.displayName="MDXCreateElement"},9032:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>l,toc:()=>s});var i=n(7462),a=(n(7294),n(3905));const r={slug:"piping_idiom",title:"UMG Piping idiom",tags:["design","umg"]},o=void 0,l={permalink:"/blog/piping_idiom",source:"@site/blog/2024-04-23_piping_idiom.md",title:"UMG Piping idiom",description:"This is a bit too big for the UMG-idioms file, so imma put it here.",date:"2024-04-23T00:00:00.000Z",formattedDate:"April 23, 2024",tags:[{label:"design",permalink:"/blog/tags/design"},{label:"umg",permalink:"/blog/tags/umg"}],readingTime:1.96,hasTruncateMarker:!0,authors:[],frontMatter:{slug:"piping_idiom",title:"UMG Piping idiom",tags:["design","umg"]},nextItem:{title:"What is Delayed Structuring? (DELS)",permalink:"/blog/DELS"}},p={authorsImageUrls:[]},s=[{value:"Example in Chat mod:",id:"example-in-chat-mod",level:2}],m={toc:s},c="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(c,(0,i.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"This is a bit too big for the UMG-idioms file, so imma put it here."),(0,a.kt)("h1",{id:"umg-piping-idiom"},"UMG Piping idiom:"),(0,a.kt)("p",null,'"Piping" in UMG is when we construct an object/entity, and shove it through an ',(0,a.kt)("a",{parentName:"p",href:"../umg_terminology"},"evbus"),", with the expectation that the event-listeners will mutate/setup the object."),(0,a.kt)("p",null,"It provides ",(0,a.kt)("a",{parentName:"p",href:"../DELS"},"DELS")," when creating new objects."),(0,a.kt)("h2",{id:"example-in-chat-mod"},"Example in Chat mod:"),(0,a.kt)("p",null,"Using the Chat-mod, we may want to have different-looking messages.  "),(0,a.kt)("p",null,"For example, the DOOM mod may want all messages to be red, to stick with the theme.",(0,a.kt)("br",{parentName:"p"}),"\n","The CleanUI mod may want nice borders around messages.",(0,a.kt)("br",{parentName:"p"}),"\n","And the AdminTools mod may want to make all host-messages yellow."),(0,a.kt)("p",null,"We can achieve this by creating a ",(0,a.kt)("inlineCode",{parentName:"p"},"MessageObject"),", shoving it through a ",(0,a.kt)("inlineCode",{parentName:"p"},"pipe"),", and having mods setup the object directly."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'--[[\n    Base chat mod:\n]]\nlocal msgObject = MessageObject(msgString)\numg.call("chat:pipeMessageObject", msgObject, clientId)\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'-- DOOM mod:\nlocal ORDER = -10 -- lower priority, since it applies to ALL messages\numg.on("chat:pipeMessageObject", function(msgObj)\n    msgObj:setColor(RED)\nend)\n\n\n-- CleanUI mod:\numg.on("chat:pipeMessageObject", function(msgObj)\n    local oldRen = msgObj.onRender\n    -- wrapping methods:\n    function msgObj:onRender(x,y,w,h)\n        oldRen(self.text, x,y,w,h)\n\n        -- custom rendering here:\n        drawBorder(self.text, x,y,w,h) \n    end\nend)\n\n-- AdminTools mod:\numg.on("chat:pipeMessageObject", function(msgObj, clientId)\n    if isHost(clientId)\n        msgObj:setColor(YELLOW)\n    end\nend)\n')),(0,a.kt)("br",null),(0,a.kt)("br",null),(0,a.kt)("h1",{id:"examples-of-piping-in-umg"},"Examples of piping in UMG:"),(0,a.kt)("p",null,"Entities and Entity-Types are both piped in UMG!"),(0,a.kt)("p",null,"Probably the best example of piping in UMG is Entity-Types:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'umg.on("@defineEntityType", function(entityType)\n    if entityType.item then\n        -- adds to item pool\n        itemGen:add(entityType)\n    elseif entityType.enemy then\n        enemyGen:add(entityType)\n    end\nend)\n\n\nlocal function generateItem()\n    -- generates a random item!\n    local etype = itemGen:getRandom()\n    return etype()\nend\n\n')),(0,a.kt)("p",null,"In this example, we are checking for the ",(0,a.kt)("inlineCode",{parentName:"p"},".item")," or ",(0,a.kt)("inlineCode",{parentName:"p"},".enemy")," ",(0,a.kt)("a",{parentName:"p",href:"../umg_terminology"},"shcomp"),"s.",(0,a.kt)("br",{parentName:"p"}),"\n","If the etype has either, then it will be added to the array;\nand will be a selection candidate when we do procedural-generation."),(0,a.kt)("br",null),(0,a.kt)("br",null),(0,a.kt)("br",null),(0,a.kt)("h1",{id:"when-is-piping-good"},"When is piping GOOD?"),(0,a.kt)("p",null,"Piping is especially good with temporary-objects."),(0,a.kt)("p",null,"With temp-objects, we can be more aggressive in what we change, because the object will be disposed of anyway.",(0,a.kt)("br",{parentName:"p"}),"\n","(Ie. If we change some state that will drastically affect the future of the object, it won't matter much, since it's only a temporary object anyway.)"),(0,a.kt)("br",null),(0,a.kt)("h1",{id:"when-is-piping-bad"},"When is piping BAD?"),(0,a.kt)("p",null,"Piping should ONLY be used when the object has JUST been created."),(0,a.kt)("p",null,"If the object is old, then other (unrelated) systems may have already changed/mutated the object.",(0,a.kt)("br",{parentName:"p"}),"\n","We want to ensure that we aren't undoing/overwriting their work."))}d.isMDXComponent=!0}}]);